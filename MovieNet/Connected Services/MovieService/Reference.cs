//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieNet.MovieService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieService.IFilmService")]
    public interface IFilmService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAServiceOf_MovieDto_Film/GetAll", ReplyAction="http://tempuri.org/IAServiceOf_MovieDto_Film/GetAllResponse")]
        MovieNetApiWcf.Dto.MovieDto[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAServiceOf_MovieDto_Film/GetAll", ReplyAction="http://tempuri.org/IAServiceOf_MovieDto_Film/GetAllResponse")]
        System.Threading.Tasks.Task<MovieNetApiWcf.Dto.MovieDto[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAServiceOf_MovieDto_Film/Upsert", ReplyAction="http://tempuri.org/IAServiceOf_MovieDto_Film/UpsertResponse")]
        MovieNetApiWcf.Dto.MovieDto Upsert(MovieNetApiWcf.Dto.MovieDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAServiceOf_MovieDto_Film/Upsert", ReplyAction="http://tempuri.org/IAServiceOf_MovieDto_Film/UpsertResponse")]
        System.Threading.Tasks.Task<MovieNetApiWcf.Dto.MovieDto> UpsertAsync(MovieNetApiWcf.Dto.MovieDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAServiceOf_MovieDto_Film/GetById", ReplyAction="http://tempuri.org/IAServiceOf_MovieDto_Film/GetByIdResponse")]
        MovieNetApiWcf.Dto.MovieDto GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAServiceOf_MovieDto_Film/GetById", ReplyAction="http://tempuri.org/IAServiceOf_MovieDto_Film/GetByIdResponse")]
        System.Threading.Tasks.Task<MovieNetApiWcf.Dto.MovieDto> GetByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFilmServiceChannel : MovieNet.MovieService.IFilmService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FilmServiceClient : System.ServiceModel.ClientBase<MovieNet.MovieService.IFilmService>, MovieNet.MovieService.IFilmService {
        
        public FilmServiceClient() {
        }
        
        public FilmServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FilmServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FilmServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FilmServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MovieNetApiWcf.Dto.MovieDto[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<MovieNetApiWcf.Dto.MovieDto[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public MovieNetApiWcf.Dto.MovieDto Upsert(MovieNetApiWcf.Dto.MovieDto dto) {
            return base.Channel.Upsert(dto);
        }
        
        public System.Threading.Tasks.Task<MovieNetApiWcf.Dto.MovieDto> UpsertAsync(MovieNetApiWcf.Dto.MovieDto dto) {
            return base.Channel.UpsertAsync(dto);
        }
        
        public MovieNetApiWcf.Dto.MovieDto GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<MovieNetApiWcf.Dto.MovieDto> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
    }
}
