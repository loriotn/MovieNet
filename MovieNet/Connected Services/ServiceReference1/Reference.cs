//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MovieNet.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utilisateur", Namespace="http://schemas.datacontract.org/2004/07/MovieNetDbProject")]
    [System.SerializableAttribute()]
    public partial class Utilisateur : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool connecteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_utilisateurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool inscritField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mdp_utilisateurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nom_utilisateurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string prenom_utilisateurField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool connecte {
            get {
                return this.connecteField;
            }
            set {
                if ((this.connecteField.Equals(value) != true)) {
                    this.connecteField = value;
                    this.RaisePropertyChanged("connecte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_utilisateur {
            get {
                return this.id_utilisateurField;
            }
            set {
                if ((this.id_utilisateurField.Equals(value) != true)) {
                    this.id_utilisateurField = value;
                    this.RaisePropertyChanged("id_utilisateur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool inscrit {
            get {
                return this.inscritField;
            }
            set {
                if ((this.inscritField.Equals(value) != true)) {
                    this.inscritField = value;
                    this.RaisePropertyChanged("inscrit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mdp_utilisateur {
            get {
                return this.mdp_utilisateurField;
            }
            set {
                if ((object.ReferenceEquals(this.mdp_utilisateurField, value) != true)) {
                    this.mdp_utilisateurField = value;
                    this.RaisePropertyChanged("mdp_utilisateur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nom_utilisateur {
            get {
                return this.nom_utilisateurField;
            }
            set {
                if ((object.ReferenceEquals(this.nom_utilisateurField, value) != true)) {
                    this.nom_utilisateurField = value;
                    this.RaisePropertyChanged("nom_utilisateur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string prenom_utilisateur {
            get {
                return this.prenom_utilisateurField;
            }
            set {
                if ((object.ReferenceEquals(this.prenom_utilisateurField, value) != true)) {
                    this.prenom_utilisateurField = value;
                    this.RaisePropertyChanged("prenom_utilisateur");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Genre", Namespace="http://schemas.datacontract.org/2004/07/MovieNetDbProject")]
    [System.SerializableAttribute()]
    public partial class Genre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetName", ReplyAction="http://tempuri.org/IService1/GetNameResponse")]
        string GetName(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetName", ReplyAction="http://tempuri.org/IService1/GetNameResponse")]
        System.Threading.Tasks.Task<string> GetNameAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFirstName", ReplyAction="http://tempuri.org/IService1/GetFirstNameResponse")]
        string GetFirstName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFirstName", ReplyAction="http://tempuri.org/IService1/GetFirstNameResponse")]
        System.Threading.Tasks.Task<string> GetFirstNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetData", ReplyAction="http://tempuri.org/IService1/SetDataResponse")]
        MovieNet.ServiceReference1.Utilisateur SetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetData", ReplyAction="http://tempuri.org/IService1/SetDataResponse")]
        System.Threading.Tasks.Task<MovieNet.ServiceReference1.Utilisateur> SetDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenre", ReplyAction="http://tempuri.org/IService1/GetGenreResponse")]
        MovieNet.ServiceReference1.Genre GetGenre();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenre", ReplyAction="http://tempuri.org/IService1/GetGenreResponse")]
        System.Threading.Tasks.Task<MovieNet.ServiceReference1.Genre> GetGenreAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MovieNet.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MovieNet.ServiceReference1.IService1>, MovieNet.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetName(int id) {
            return base.Channel.GetName(id);
        }
        
        public System.Threading.Tasks.Task<string> GetNameAsync(int id) {
            return base.Channel.GetNameAsync(id);
        }
        
        public string GetFirstName() {
            return base.Channel.GetFirstName();
        }
        
        public System.Threading.Tasks.Task<string> GetFirstNameAsync() {
            return base.Channel.GetFirstNameAsync();
        }
        
        public MovieNet.ServiceReference1.Utilisateur SetData() {
            return base.Channel.SetData();
        }
        
        public System.Threading.Tasks.Task<MovieNet.ServiceReference1.Utilisateur> SetDataAsync() {
            return base.Channel.SetDataAsync();
        }
        
        public MovieNet.ServiceReference1.Genre GetGenre() {
            return base.Channel.GetGenre();
        }
        
        public System.Threading.Tasks.Task<MovieNet.ServiceReference1.Genre> GetGenreAsync() {
            return base.Channel.GetGenreAsync();
        }
    }
}
